<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.CangkuMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加仓库记录 -->
	<insert id="addCangku" parameterType="cangku">
		insert into t_cangku(diqu,cangkuName,mianji,tdl,lianxiren,telephone,address,cangkuMemo) values 
		(#{diqu},#{cangkuName},#{mianji},#{tdl},#{lianxiren},#{telephone},#{address},#{cangkuMemo})
	</insert>

	<!-- 按照查询条件分页查询仓库记录 -->
	<select id="queryCangku" resultMap="cangkuMap" >
		select t_cangku.* from t_cangku ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="cangkuMap" type="cangku">
        <id property="cangkuId" column="cangkuId" />
    </resultMap>

    <!-- 按照查询条件查询所有仓库记录 -->
	<select id="queryCangkuList" resultMap="cangkuMap" >
		select t_cangku.* from t_cangku ${where}
	</select>

    <!-- 按照查询条件的仓库记录数 -->
	<select id="queryCangkuCount" resultType="int">
		select count(*) from t_cangku ${where}
	</select>

	<!-- 根据主键查询某个仓库记录 -->
	<select id="getCangku" parameterType="int" resultMap="cangkuMap">
		select * from t_cangku where t_cangku.cangkuId = #{cangkuId}
	</select>

	<!-- 更新仓库记录 -->
	<update id="updateCangku" parameterType="cangku">
		update t_cangku set diqu=#{diqu},cangkuName=#{cangkuName},mianji=#{mianji},tdl=#{tdl},lianxiren=#{lianxiren},telephone=#{telephone},address=#{address},cangkuMemo=#{cangkuMemo} where cangkuId = #{cangkuId}
	</update>

	<!-- 删除仓库记录 -->
	<delete id="deleteCangku" parameterType="int">
		delete from t_cangku where cangkuId=#{cangkuId}
	</delete>

</mapper>
